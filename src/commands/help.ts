import { GuildMember, SlashCommandBuilder, ChatInputCommandInteraction, EmbedBuilder } from 'discord.js';
import { DiscordBot } from '../index';
import { SettingsService } from '../services/settings/SettingsService';

type HelpCommand = {
    usage: string;
    description: string;
};

type HelpSection = {
    title: string;
    desc: string;
    commands: HelpCommand[];
};

type HelpStructureType = {
    [key: string]: HelpSection;
};

const HELP_STRUCTURE: HelpStructureType = {
    level: {
      title: 'üìä Level ‚Äî –£—Ä–æ–≤–Ω–∏',
      desc: '–°–∏—Å—Ç–µ–º–∞ —É—Ä–æ–≤–Ω–µ–π –∏ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞',
      commands: [
        { usage: '```/level me```', description: '–í–∞—à —É—Ä–æ–≤–µ–Ω—å.' },
        { usage: '```/level user <user>```', description: '–£—Ä–æ–≤–µ–Ω—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.' },
        { usage: '```/level leaderboard <type>```', description: '–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤.' },
        { usage: '```/level addxp <user> <–∑–Ω–∞—á–µ–Ω–∏–µ>```', description: '–î–æ–±–∞–≤–∏—Ç—å XP –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é. (–∞–¥–º–∏–Ω)' },
        { usage: '```/level setxp <user> <–∑–Ω–∞—á–µ–Ω–∏–µ>```', description: '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å XP.' },
        { usage: '```/level removexp <user> <–∑–Ω–∞—á–µ–Ω–∏–µ>```', description: '–í—ã—á–µ—Å—Ç—å XP.' },
        { usage: '```/level addcoins <user> <–∑–Ω–∞—á–µ–Ω–∏–µ>```', description: '–î–∞—Ç—å –º–æ–Ω–µ—Ç—ã.' },
        { usage: '```/level setcoins <user> <–∑–Ω–∞—á–µ–Ω–∏–µ>```', description: '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–Ω–µ—Ç—ã.' },
        { usage: '```/level removecoins <user> <–∑–Ω–∞—á–µ–Ω–∏–µ>```', description: '–í—ã—á–µ—Å—Ç—å –º–æ–Ω–µ—Ç—ã.' },
      ]
    },
    economy: {
      title: 'ü™ô Economy ‚Äî —ç–∫–æ–Ω–æ–º–∏–∫–∞ –±–æ—Ç–∞',
      desc: '–ú–∞–≥–∞–∑–∏–Ω –∏ –±–æ–Ω—É—Å—ã',
      commands: [
          { usage: '```/daily```', description: '–ü–æ–ª—É—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å.' },
          { usage: '```/weekly```', description: '–ü–æ–ª—É—á–∏—Ç—å –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –±–æ–Ω—É—Å.' },
          { usage: '```/streak```', description: '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ—é —Å–µ—Ä–∏—é –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –±–æ–Ω—É—Å–æ–≤.' },
          { usage: '```/gift <user> [amount]```', description: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ–¥–∞—Ä–æ–∫ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –º–æ–Ω–µ—Ç.' },
          { usage: '```/shop list```', description: '–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤.' },
          { usage: '```/shop buy <id>```', description: '–ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä.' },
          { usage: '```/shop balance```', description: '–í–∞—à –±–∞–ª–∞–Ω—Å.' },
      ]
    },
    battlepass: {
      title: 'üé´ Battle Pass',
      desc: '–°–∏—Å—Ç–µ–º–∞ –∑–∞–¥–∞–Ω–∏–π, —É—Ä–æ–≤–Ω–µ–π –∏ –Ω–∞–≥—Ä–∞–¥, –ø—Ä–æ–∫–∞—á–∏–≤–∞–µ–º–æ–π –∫–∞–∂–¥—ã–π —Å–µ–∑–æ–Ω!',
      commands: [
        { usage: '```/battlepass progress```', description: '–í–∞—à —É—Ä–æ–≤–µ–Ω—å Battle Pass –∏ —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π.' },
        { usage: '```/battlepass roadmap```', description: '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Ä–æ–∂–Ω—É—é –∫–∞—Ä—Ç—É –≤—Å–µ—Ö –Ω–∞–≥—Ä–∞–¥ Battle Pass.' }
      ]
    },
    games: {
      title: 'üéÆ Games ‚Äî –ò–≥—Ä–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã',
      desc: '–ú–∏–Ω–∏-–∏–≥—Ä—ã –∏ —Å—Ç–∞–≤–∫–∏.',
      commands: [
        { usage: '```/games slots [bet]```', description: '–°—ã–≥—Ä–∞—Ç—å –≤ —Å–ª–æ—Ç—ã.' },
        { usage: '```/games dice [bet]```', description: '–ë—Ä–æ—Å–∏—Ç—å 2 –∫—É–±–∏–∫–∞.' },
        { usage: '```/games coin [bet]```', description: '–ü–æ–¥–±—Ä–æ—Å–∏—Ç—å –º–æ–Ω–µ—Ç–∫—É.' },
        { usage: '```/games duel <user> [bet]```', description: '–ë—Ä–æ—Å–∏—Ç—å –≤—ã–∑–æ–≤ –¥—É—ç–ª–∏.' },
      ]
    },
    predict: {
      title: 'üîÆ –ü—Ä–µ–¥—É–≥–∞–¥–∞–Ω–∏–µ & –§–∞–∫—Ç—ã',
      desc: '–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã.',
      commands: [
        { usage: '```/predict yesno <–≤–æ–ø—Ä–æ—Å>```', description: '–û—Ç–≤–µ—Ç –¥–∞ –∏–ª–∏ –Ω–µ—Ç.' },
        { usage: '```/predict percentage <—Ç–µ–∫—Å—Ç>```', description: '–ü—Ä–æ—Ü–µ–Ω—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏/—à–∞–Ω—Å.' },
        { usage: '```/predict fortune```', description: '–°–ª—É—á–∞–π–Ω–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ.' },
        { usage: '```/fact [category]```', description: '–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç.' }
      ]
    },
    utilities: {
      title: 'üõ†Ô∏è –£—Ç–∏–ª–∏—Ç—ã',
      desc: '–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–º–∞–Ω–¥—ã –±–æ—Ç–∞',
      commands: [
        { usage: '```/server-info```', description: '–ò–Ω—Ñ–æ –æ —Å–µ—Ä–≤–µ—Ä–µ.' },
        { usage: '```/stats```', description: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞.' },
        { usage: '```/dm <@user> <text>```', description: '–õ–° –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞.' },
        { usage: '```/help```', description: '–û—Å–Ω–æ–≤–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞.' },
      ]
    },
    admin: {
      title: '‚öôÔ∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ',
      desc: '–ö–æ–º–∞–Ω–¥—ã —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.',
      commands: [
        { usage: '```/settings```', description: '–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫.' },
        { usage: '```/markov generate [—Å–ª–æ–≤–æ]```', description: 'AI-–æ—Ç–≤–µ—Ç –≤—Ä—É—á–Ω—É—é.' },
        { usage: '```/markov stats```', description: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ AI.' },
        { usage: '```/markov clear```', description: '–û—á–∏—Å—Ç–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ.' },
        { usage: '```/markov meme```', description: '–ú–µ–º —Å AI.' },
      ]
    },
    shopmanage: {
      title: 'üõí –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–æ–º',
      desc: '–¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤.',
      commands: [
        { usage: '```/shop-manage add <name> <price>...```', description: '–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä.' },
        { usage: '```/shop-manage remove <item_id>```', description: '–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä.' },
        { usage: '```/shop-manage list```', description: '–í—Å–µ —Ç–æ–≤–∞—Ä—ã (–≤–∫–ª. –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ).' },
        { usage: '```/shop-manage toggle <item_id>```', description: '–í–∫–ª/–≤—ã–∫–ª —Ç–æ–≤–∞—Ä.' },
      ]
    },
};
  
const SECTIONS = [
    { name: '–£—Ä–æ–≤–Ω–∏', value: 'level' },
    { name: '–≠–∫–æ–Ω–æ–º–∏–∫–∞', value: 'economy' },
    { name: 'Battle Pass', value: 'battlepass' },
    { name: '–ò–≥—Ä—ã', value: 'games' },
    { name: '–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è', value: 'predict' },
    { name: '–£—Ç–∏–ª–∏—Ç—ã', value: 'utilities' },
    { name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ', value: 'admin' },
    { name: '–ú–∞–≥–∞–∑–∏–Ω', value: 'shopmanage' },
];
  
export const data = new SlashCommandBuilder()
.setName('help')
.setDescription('–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º')
.addStringOption(opt =>
    opt.setName('section')
    .setDescription('–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞ –∏–ª–∏ –∫–æ–º–∞–Ω–¥—ã')
    .setRequired(false)
    .addChoices(
        ...SECTIONS.map(section => ({ name: section.name, value: section.value }))
    )
);

function twoCol(fields: { name: string, value: string }[]): { name: string, value: string, inline: boolean }[] {
    const result: { name: string; value: string; inline: boolean }[] = [];
    for (let i = 0; i < fields.length; i += 2) {
      // –Ø–≤–Ω–æ –ø—Ä–æ–∫–∏–¥—ã–≤–∞–µ–º name/value,
      // –µ—Å–ª–∏ —á–µ–≥–æ-—Ç–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç ‚Äî –¥–µ–ª–∞–µ–º –∑–∞–≥–ª—É—à–∫—É!
      const a = fields[i];
      const b = fields[i + 1];
  
      result.push({
        name: a?.name ?? '\u200B',
        value: a?.value ?? '\u200B',
        inline: true,
      });
  
      if (b) {
        result.push({
          name: b?.name ?? '\u200B',
          value: b?.value ?? '\u200B',
          inline: true,
        });
      }
  
      // –¢—Ä–µ—Ç–∏–π —Å—Ç–æ–ª–±–µ—Ü ‚Äî —á–∏—Å—Ç—ã–π –∑–∞–ø–æ–ª–Ω–∏—Ç–µ–ª—å –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ä—è–¥–∞
      result.push({
        name: '\u200B',
        value: '\u200B',
        inline: true,
      });
    }
    return result;
}

export async function execute(interaction: ChatInputCommandInteraction, bot: DiscordBot) {
    const section = interaction.options.getString('section');
    const settingsService = new SettingsService(bot.database, bot.redis);
  
    const member = interaction.member as GuildMember;
    const settings = await settingsService.getGuildSettings(interaction.guildId!);
    const isAdmin = await settingsService.hasPermission(member, settings);
  
    // –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω–∞ –ø–æ–¥–∫–æ–º–∞–Ω–¥–∞
    if (section) {
      if (!HELP_STRUCTURE[section]) {
        await interaction.reply({
          content: '–†–∞–∑–¥–µ–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.',
          ephemeral: true,
        });
        return;
      }
      
      // –ê–¥–º–∏–Ω-—Ä–∞–∑–¥–µ–ª—ã –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—É
      if ((section === 'admin' || section === 'shopmanage') && !isAdmin) {
        await interaction.reply({ content: '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤.', ephemeral: true });
        return;
      }
  
      const sectionData = HELP_STRUCTURE[section];
      const embed = new EmbedBuilder()
        .setColor('#0099FF')
        .setTitle(sectionData.title)
        .setDescription(sectionData.desc)
        .addFields(sectionData.commands.map((c: HelpCommand) => ({
          name: c.description, 
          value: c.usage, 
          inline: false,
        })))
        .setFooter({ text: '/help ‚Äî —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É –≤—Å–µ—Ö —Ä–∞–∑–¥–µ–ª–æ–≤.' })
        .setTimestamp();
        
      await interaction.reply({ embeds: [embed], ephemeral: false });
      return;
    }
  
    // –ì–ª–∞–≤–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞: –≤—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ 2 –∫–æ–ª–æ–Ω–∫–∏
    const baseKeys: string[] = isAdmin
      ? ['level', 'economy', 'battlepass', 'games', 'predict', 'utilities', 'admin', 'shopmanage']
      : ['level', 'economy', 'battlepass', 'games', 'predict', 'utilities'];
  
    const fieldArr = baseKeys.map(k => {
        const sectionData = HELP_STRUCTURE[k];
        // –ó–∞—â–∏—Ç–∞: –µ—Å–ª–∏ –≤–¥—Ä—É–≥ —Å–µ–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É
        if (!sectionData) {
            return { name: k, value: '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è', inline: true };
        }
        return {
            name: sectionData.title,
            value: sectionData.desc.length > 0 
            ? sectionData.desc 
            : sectionData.commands.map((c: HelpCommand) => c.usage).slice(0, 2).join('\n'),
        };
    });
  
    const embed = new EmbedBuilder()
      .setColor('#0099FF')
      .setTitle('ü§ñ –ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º')
      .setDescription('–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π —Å–ø—Ä–∞–≤–∫–∏:\n`/help <—Ä–∞–∑–¥–µ–ª>`')
      .addFields(twoCol(fieldArr))
      .setFooter({ text: '–£–∫–∞–∂–∏—Ç–µ "/help <—Ä–∞–∑–¥–µ–ª>" –Ω–∞–ø—Ä–∏–º–µ—Ä: /help level' })
      .setTimestamp();
  
    await interaction.reply({ embeds: [embed], ephemeral: false });
}