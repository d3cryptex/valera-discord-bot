import { SlashCommandBuilder, ChatInputCommandInteraction, EmbedBuilder, ColorResolvable } from 'discord.js';

export const data = new SlashCommandBuilder()
    .setName('predict')
    .setDescription('–ì–∞–¥–∞–Ω–∏–µ –∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è')
    .addSubcommand(subcommand =>
        subcommand
            .setName('yesno')
            .setDescription('–û—Ç–≤–µ—Ç –¥–∞ –∏–ª–∏ –Ω–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å')
            .addStringOption(option => 
                option
                    .setName('question')
                    .setDescription('–í–∞—à –≤–æ–ø—Ä–æ—Å')
                    .setRequired(true)
            )
    )
    .addSubcommand(subcommand =>
        subcommand
            .setName('percentage')
            .setDescription('–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –∏–ª–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å')
            .addStringOption(option => 
                option
                    .setName('query')
                    .setDescription('–ß—Ç–æ –∏–∑–º–µ—Ä–∏—Ç—å –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö?')
                    .setRequired(true)
            )
    )
    .addSubcommand(subcommand =>
        subcommand
            .setName('fortune')
            .setDescription('–°–ª—É—á–∞–π–Ω–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ')
    );

export async function execute(interaction: ChatInputCommandInteraction) {
    const subcommand = interaction.options.getSubcommand();
    
    switch (subcommand) {
        case 'yesno':
            await handleYesNo(interaction);
            break;
        case 'percentage':
            await handlePercentage(interaction);
            break;
        case 'fortune':
            await handleFortune(interaction);
            break;
    }
}

async function handleYesNo(interaction: ChatInputCommandInteraction) {
    const question = interaction.options.getString('question', true);
    
    await interaction.deferReply();
    
    // –≠–º—É–ª—è—Ü–∏—è "–¥—É–º–∞—é—â–µ–≥–æ" –±–æ—Ç–∞
    const thinkingEmbed = new EmbedBuilder()
        .setColor('#FFFF00')
        .setTitle('üîÆ –ì–∞–¥–∞–Ω–∏–µ')
        .setDescription('–°–º–æ—Ç—Ä—é –≤ —Ö—Ä—É—Å—Ç–∞–ª—å–Ω—ã–π —à–∞—Ä...')
        .addFields({ name: '–í–æ–ø—Ä–æ—Å:', value: question });
    
    await interaction.editReply({ embeds: [thinkingEmbed] });
    
    // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –¥—Ä–∞–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    const answers = [
        { text: '–î–∞', emoji: '‚úÖ', color: '#00FF00' },
        { text: '–ù–µ—Ç', emoji: '‚ùå', color: '#FF0000' },
        { text: '–í–æ–∑–º–æ–∂–Ω–æ', emoji: 'ü§î', color: '#FFFF00' },
        { text: '–û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ –¥–∞', emoji: 'üíØ', color: '#00FF00' },
        { text: '–û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ –Ω–µ—Ç', emoji: 'üö´', color: '#FF0000' },
        { text: '–°–ø—Ä–æ—Å–∏ –ø–æ–∑–∂–µ', emoji: '‚è∞', color: '#808080' },
        { text: '–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ', emoji: 'üëç', color: '#90EE90' },
        { text: '–í—Ä—è–¥ –ª–∏', emoji: 'üëé', color: '#FFB6C1' }
    ];

    if (answers.length === 0) {
        const embed = new EmbedBuilder()
            .setColor('#eb4034')
            .setTitle('–û—à–∏–±–∫–∞')
            .setDescription('‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤');
        await interaction.editReply({ embeds: [embed] });
    }
    
    const answer = answers[Math.floor(Math.random() * answers.length)]!;
    
    const resultEmbed = new EmbedBuilder()
        .setColor(answer.color as ColorResolvable)
        .setTitle('üîÆ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ')
        .setDescription(`${answer.emoji} **${answer.text}**`)
        .addFields({ name: '–í–∞—à –≤–æ–ø—Ä–æ—Å:', value: question });
    
    await interaction.editReply({ embeds: [resultEmbed] });
}

async function handlePercentage(interaction: ChatInputCommandInteraction) {
    const query = interaction.options.getString('query', true);
    
    await interaction.deferReply();
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º "—Å–ª—É—á–∞–π–Ω—ã–π" –Ω–æ —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ö–µ—à–∞ —Å—Ç—Ä–æ–∫–∏
    const hash = query.split('').reduce((a, b) => {
        a = ((a << 5) - a) + b.charCodeAt(0);
        return a & a;
    }, 0);
    
    const percentage = Math.abs(hash) % 101; // 0-100%
    
    let color = '#FF0000';
    let emoji = 'üíî';
    
    if (percentage >= 80) {
        color = '#FF69B4';
        emoji = 'üíñ';
    } else if (percentage >= 60) {
        color = '#FFA500';
        emoji = 'üß°';
    } else if (percentage >= 40) {
        color = '#FFFF00';
        emoji = 'üíõ';
    } else if (percentage >= 20) {
        color = '#87CEEB';
        emoji = 'üíô';
    }
    
    const embed = new EmbedBuilder()
        .setColor(color as any)
        .setTitle('üìä –ü—Ä–æ—Ü–µ–Ω—Ç–æ–º–µ—Ç—Ä')
        .setDescription(`${emoji} **${percentage}%**`)
        .addFields({ name: '–ó–∞–ø—Ä–æ—Å:', value: query })
        .setFooter({ text: '–û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ —Å–ª–æ–∂–Ω—ã—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏—è—Ö!' });
    
    await interaction.editReply({ embeds: [embed] });
}

async function handleFortune(interaction: ChatInputCommandInteraction) {
    const fortunes: string[] = [
        '–°–µ–≥–æ–¥–Ω—è —É–¥–∞—á–∞ –±—É–¥–µ—Ç –Ω–∞ –≤–∞—à–µ–π —Å—Ç–æ—Ä–æ–Ω–µ!',
        '–û—Å—Ç–µ—Ä–µ–≥–∞–π—Ç–µ—Å—å —á–µ–ª–æ–≤–µ–∫–∞ –≤ —Å–∏–Ω–µ–º.',
        '–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –ø—Ä–∏–¥—É—Ç —Å —Å–µ–≤–µ—Ä–∞.',
        '–í–∞—à–∏ —Å—Ç–∞—Ä–∞–Ω–∏—è —Å–∫–æ—Ä–æ –±—É–¥—É—Ç –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω—ã.',
        '–ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã –∫ –∑–Ω–∞–∫–∞–º –≤–æ–∫—Ä—É–≥ –≤–∞—Å.',
        '–°—Ç–∞—Ä—ã–π –¥—Ä—É–≥ –≤—Å–ø–æ–º–Ω–∏—Ç –æ –≤–∞—Å.',
        '–ü–µ—Ä–µ–º–µ–Ω—ã –Ω–µ –∑–∞ –≥–æ—Ä–∞–º–∏.',
        '–î–æ–≤–µ—Ä—å—Ç–µ—Å—å —Å–≤–æ–µ–π –∏–Ω—Ç—É–∏—Ü–∏–∏.',
        '–•–æ—Ä–æ—à–∏–µ –≤–µ—Å—Ç–∏ –≤ –ø—É—Ç–∏.',
        '–ó–≤–µ–∑–¥—ã –±–ª–∞–≥–æ—Å–∫–ª–æ–Ω–Ω—ã –∫ –Ω–æ–≤—ã–º –Ω–∞—á–∏–Ω–∞–Ω–∏—è–º.',
        '–í–∞—à–∞ –¥–æ–±—Ä–æ—Ç–∞ –≤–µ—Ä–Ω–µ—Ç—Å—è –∫ –≤–∞–º –≤—Ç—Ä–æ–π–Ω–µ.',
        '–°–∫–æ—Ä–æ –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –≤–∞–∂–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ.',
        '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø—Ä–∏–Ω–µ—Å–µ—Ç –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏.',
        '–¢–≤–æ—Ä—á–µ—Å–∫–∏–π –ø—Ä–æ–µ–∫—Ç —É–≤–µ–Ω—á–∞–µ—Ç—Å—è —É—Å–ø–µ—Ö–æ–º.',
        '–õ—é–±–æ–≤—å –Ω–∞–π–¥–µ—Ç –≤–∞—Å, –∫–æ–≥–¥–∞ –≤—ã –º–µ–Ω—å—à–µ –≤—Å–µ–≥–æ —ç—Ç–æ–≥–æ –∂–¥–µ—Ç–µ.',
        // –ù–æ–≤—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:
        '–ó–∞–≤—Ç—Ä–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–æ–≤–∞—è –≥–ª–∞–≤–∞ –≤–∞—à–µ–π –∏—Å—Ç–æ—Ä–∏–∏.',
        '–°–ª—É—á–∞–π–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞ –∏–∑–º–µ–Ω–∏—Ç –≤–∞—à–∏ –ø–ª–∞–Ω—ã.',
        '–ú–∞–ª–µ–Ω—å–∫–∞—è —Ä–∞–¥–æ—Å—Ç—å —É–∫—Ä–∞—Å–∏—Ç —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å.',
        '–ù–∞–π–¥–∏—Ç–µ –º–∏–Ω—É—Ç—É –¥–ª—è —Å–µ–±—è ‚Äî –í—Å–µ–ª–µ–Ω–Ω–∞—è —ç—Ç–æ –æ—Ü–µ–Ω–∏—Ç.',
        '–í—Ä–µ–º—è –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–Ω—è—Ç—å –º–Ω–æ–≥–æ–µ. –ù–µ —Ç–æ—Ä–æ–ø–∏—Ç–µ—Å—å.',
        '–£–ª—ã–±–∫–∞ –ø—Ä–∏—Ç—è–Ω–µ—Ç –∫ –≤–∞–º —Ö–æ—Ä–æ—à–∏—Ö –ª—é–¥–µ–π.',
        '–ü–æ–ª—É—á–∏—Ç–µ –¥–æ–ª–≥–æ–∂–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –≤ –±–ª–∏–∂–∞–π—à–∏–µ –¥–Ω–∏.',
        '–ö—Ç–æ-—Ç–æ –º—ã—Å–ª–µ–Ω–Ω–æ –±–ª–∞–≥–æ–¥–∞—Ä–µ–Ω –≤–∞–º —Å–µ–≥–æ–¥–Ω—è.',
        '–î–µ–Ω—å –±—É–¥–µ—Ç –∏–¥–µ–∞–ª–µ–Ω –¥–ª—è –Ω–æ–≤—ã—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤.',
        '–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –º–µ—á—Ç—ã —Å–±—ã–≤–∞—é—Ç—Å—è –≤–Ω–µ–∑–∞–ø–Ω–æ.',
        '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å —Ä–µ—à–∏—Ç—Å—è –ø—Ä–æ—â–µ, —á–µ–º –≤—ã –¥—É–º–∞–µ—Ç–µ.',
        '–û–¥–∏–Ω —Ä–∞–∑–≥–æ–≤–æ—Ä –ø—Ä–∏–Ω–µ—Å–µ—Ç –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ.',
        '–í–∞–º –æ—Ç–∫—Ä–æ–µ—Ç—Å—è —Å–ø—Ä—è—Ç–∞–Ω–Ω–∞—è —Ä–∞–Ω–µ–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å.',
        '–ü–æ–¥–¥–µ—Ä–∂–∏—Ç–µ —Ç–æ–≥–æ, –∫—Ç–æ –º–æ–ª—á–∏—Ç ‚Äî —ç—Ç–æ –≤–∞–∂–Ω–æ.',
        '–í–∞—à–µ —Å–ª–æ–≤–æ —Å–µ–≥–æ–¥–Ω—è –≤–µ—Å–∏—Ç –æ—Å–æ–±–µ–Ω–Ω–æ –º–Ω–æ–≥–æ.',
        '–ö —Ç–æ–º—É, –∫—Ç–æ —Å–º–µ–µ—Ç—Å—è –ø–µ—Ä–≤—ã–º, —É–¥–∞—á–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç —á–∞—â–µ.',
        '–°–ª—É—á–∞–π –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –∏–∑–±–µ–∂–∞—Ç—å –Ω–µ–ø—Ä–∏—è—Ç–Ω–æ—Å—Ç–µ–π.',
        '–ú–æ–ª—á–∞–Ω–∏–µ –∏–Ω–æ–≥–¥–∞ –±—ã–≤–∞–µ—Ç –ª—É—á—à–∏–º –æ—Ç–≤–µ—Ç–æ–º.',
        '–®–∞–Ω—Å –≤–æ–∑–Ω–∏–∫–Ω–µ—Ç —Ç–∞–º, –≥–¥–µ –≤—ã –Ω–µ –∂–¥—ë—Ç–µ.',
        '–í–µ—Ä—å—Ç–µ –∑–Ω–∞–∫–∞–º ‚Äî –í—Å–µ–ª–µ–Ω–Ω–∞—è —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞–µ—Ç.',
        '–í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –Ω–∞—Å—Ç–∏–≥–Ω–µ—Ç –≤ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–º –º–µ—Å—Ç–µ.',
        '–°–∫–æ—Ä–æ –±—É–¥–µ—Ç –ø–æ–≤–æ–¥ –¥–ª—è –≤–µ—Å—ë–ª–æ–≥–æ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞.',
        '–í–∞—à–∏ —Å–ª–æ–≤–∞ –º–æ–≥—É—Ç –∏–∑–º–µ–Ω–∏—Ç—å —á–µ–π-—Ç–æ –¥–µ–Ω—å.',
        '–û–∂–∏–¥–∞–π—Ç–µ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ. –°–µ–≥–æ–¥–Ω—è —ç—Ç–æ –¥–µ–≤–∏–∑.',
        '–†–µ—à–∞–π—Ç–µ—Å—å ‚Äî –≤—Å—ë –ø–æ–ª—É—á–∏—Ç—Å—è!',
        '–¢–∞–π–Ω–æ–µ –≤—Å–∫–æ—Ä–µ —Å—Ç–∞–Ω–µ—Ç —è–≤–Ω—ã–º.',
        '–ë–ª–∏–∑–∫–∏–π —á–µ–ª–æ–≤–µ–∫ –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ –≤–∞—à–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–µ.',
        '–ü–æ—Ä–∞–¥—É–π—Ç–µ —Å–µ–±—è –º–∞–ª–µ–Ω—å–∫–∏–º –ø–æ–¥–∞—Ä–∫–æ–º.',
        '–í–∞—à–∞ —Å–º–µ–ª–æ—Å—Ç—å —É–¥–∏–≤–∏—Ç –¥–∞–∂–µ –≤–∞—Å.'
    ];
    
    if (fortunes.length === 0) {
        const embed = new EmbedBuilder()
            .setColor('#eb4034')
            .setTitle('–û—à–∏–±–∫–∞')
            .setDescription('‚ùå –ù–µ—Ç –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π.');
        await interaction.reply({ embeds: [embed], ephemeral: true });
        return;
    }
    
    const fortune = fortunes[Math.floor(Math.random() * fortunes.length)]!;
    
    const embed = new EmbedBuilder()
        .setColor('#9932CC')
        .setTitle('üåü –í–∞—à–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ')
        .setDescription(fortune)

    await interaction.reply({ embeds: [embed] });
}